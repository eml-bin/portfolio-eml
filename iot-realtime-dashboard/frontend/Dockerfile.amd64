# Stage 0, "build-stage", based on Node.js, to build and compile the frontend
FROM node:16-alpine as build
WORKDIR /app
ENV PATH /app/node_modules/.bin:$PATH
COPY package.json ./
COPY package-lock.json ./

RUN npm install
RUN npm install react-scripts@3.2.0 -g
COPY . ./

RUN npm run build

# Stage 1, based on Nginx, to have only the compiled app, ready for production with Nginx
FROM nginx:alpine as production-stage

# COPY --from=build /app/build /usr/share/nginx.html

# RUN rm /etc/nginx/conf.d/default.conf
# COPY ./nginx/default.conf /etc/nginx/nginx.conf
# EXPOSE 80
# ENTRYPOINT ["nginx", "-g", "daemon off;"]

WORKDIR /usr/share/nginx/html
COPY --from=build /app/build/ /usr/share/nginx/html
RUN rm /etc/nginx/conf.d/default.conf
# COPY nginx/nginx.conf /etc/nginx/nginx.conf

COPY ./nginx/default.conf /etc/nginx/nginx.conf

# # WORKDIR /usr/share/nginx/html

EXPOSE 80
ENTRYPOINT ["nginx","-g","daemon off;"]